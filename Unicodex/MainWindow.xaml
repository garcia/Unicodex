<Window x:Class="Unicodex.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Unicodex"
        mc:Ignorable="d"
        Title="Unicodex"
        Icon="./Resources/Icons/main.ico"
        ShowInTaskbar="False"
        Loaded="Window_Loaded"
        PreviewKeyDown="Window_PreviewKeyDown"
        IsVisibleChanged="Window_IsVisibleChanged"
        Deactivated="Window_Deactivated"
        Closing="Window_Closing"
        Height="329"
        Width="640">
    <shell:WindowChrome.WindowChrome>
        <shell:WindowChrome CaptionHeight="24"
                            GlassFrameThickness="0,0,0,1"
                            ResizeBorderThickness="5" />
    </shell:WindowChrome.WindowChrome>
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="Bool2VisibilityConverter" />

        <SolidColorBrush x:Key="PrimaryForeground" Color="Black" />
        <SolidColorBrush x:Key="SecondaryForeground" Color="#5F5F5F" />
        <SolidColorBrush x:Key="TertiaryForeground" Color="#AFAFAF" />
        <SolidColorBrush x:Key="AlternatingBackground1" Color="#F0F0F0" />
        <SolidColorBrush x:Key="AlternatingBackground2" Color="#F8F8F8" />
        <SolidColorBrush x:Key="AlternatingBackgroundHover" Color="#E8E8E8" />
        <SolidColorBrush x:Key="AlternatingBackgroundSelected" Color="#E0E0E0" />

        <Style TargetType="{x:Type TabItem}" x:Key="TabHeaderNormalStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <!-- Compensate for 2-pixel left padding in the TabPanel -->
                        <Grid Margin="-2,-2,0,0">
                            <Border Name="Border" Margin="0" Background="{StaticResource AlternatingBackground2}" shell:WindowChrome.IsHitTestVisibleInChrome="True">
                                <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    ContentSource="Header" Margin="12,2,12,2"
                                    RecognizesAccessKey="True">
                                </ContentPresenter>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter TargetName="Border" Property="Background" Value="#e0e0e0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type StackPanel}" x:Key="TabHeaderStackPanelStyle">
            <Setter Property="Orientation" Value="Horizontal" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="shell:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        </Style>
        <Style TargetType="{x:Type TextBlock}" x:Key="TabHeaderIconStyle">
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="{x:Type TextBlock}" x:Key="TabHeaderTextStyle">
            <Setter Property="Padding" Value="10,0,0,0" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="{x:Type TextBlock}" x:Key="IconStyle">
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="{x:Type ToggleButton}" x:Key="FavoriteButtonStyle">
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Padding="10,0">
                            <Grid Background="Transparent">
                                <ContentPresenter></ContentPresenter>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="TextBlock.Foreground" Value="#b0b0b0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="TextBlock.Foreground" Value="#606060"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Content" Value="&#xE24A;" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="TextBlock.Foreground" Value="{x:Static SystemColors.MenuHighlightBrush}" />
                                <Setter Property="Content" Value="&#xE249;" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <TabControl x:Name="tabControl" Padding="0" BorderThickness="0">

            <TabItem x:Name="SearchTab" Style="{StaticResource TabHeaderNormalStyle}">
                <TabItem.Header>
                    <StackPanel Style="{StaticResource TabHeaderStackPanelStyle}">
                        <TextBlock Text="&#xE094;" Style="{StaticResource TabHeaderIconStyle}" />
                        <TextBlock Text="Search" Grid.Column="2" Style="{StaticResource TabHeaderTextStyle}" />
                    </StackPanel>
                </TabItem.Header>

                <Grid FocusManager.FocusedElement="{Binding ElementName=SearchTextBox}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <TextBox
                        x:Name="SearchTextBox"
                        TextWrapping="Wrap"
                        VerticalAlignment="Top"
                        FontSize="16"
                        Padding="5"
                        TextChanged="SearchTextBox_TextChanged"
                        PreviewKeyDown="SearchTextBox_PreviewKeyDown" BorderThickness="0,1" />

                    <ListView Name="SearchResults" Grid.IsSharedSizeScope="True" AlternationCount="2" Grid.Row="1" BorderThickness="0">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <ContentControl MouseDoubleClick="SearchResult_MouseDoubleClick">
                                    <Grid Name="SearchResult" Background="Transparent">
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="SearchResultColumnSize1" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Text="{Binding Value}" FontSize="36" HorizontalAlignment="Center" Padding="5">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HasSpecialValue}" Value="true">
                                                            <Setter Property="Foreground" Value="Blue" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                        <TextBlock Text="{Binding Codepoint}" Grid.Row="1" FontSize="12" HorizontalAlignment="Center" Padding="5" Foreground="{StaticResource SecondaryForeground}" />

                                        <Grid Grid.Column="1" Grid.RowSpan="2" VerticalAlignment="Center">
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <TextBlock Text="{Binding Name}" Grid.Row="0" FontSize="16" TextTrimming="CharacterEllipsis" />
                                            <ListView Grid.Row="1"
                                                  BorderThickness="0"
                                                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                  ItemsSource="{Binding Tags}"
                                                  Background="Transparent"
                                                  BorderBrush="Transparent">
                                                <ListView.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel Orientation="Horizontal" />
                                                    </ItemsPanelTemplate>
                                                </ListView.ItemsPanel>
                                                <ListView.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition />
                                                                <ColumnDefinition />
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock Text="#" Grid.Column="0" Foreground="{StaticResource TertiaryForeground}" />
                                                            <TextBlock Text="{Binding Name}" Grid.Column="1" Foreground="{StaticResource SecondaryForeground}" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </ListView.ItemTemplate>
                                                <ListView.Resources>
                                                    <Style TargetType="ListView">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate>
                                                                    <ItemsPresenter></ItemsPresenter>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                    <Style TargetType="ListViewItem">
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Setter Property="Margin" Value="0,0,10,0" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                                    <ContentPresenter IsHitTestVisible="False" />
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ListView.Resources>
                                            </ListView>
                                        </Grid>

                                        <ToggleButton 
                                        Grid.Column="2"
                                        Grid.RowSpan="2"
                                        Style="{StaticResource FavoriteButtonStyle}"
                                        Background="Transparent"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        IsChecked="{Binding IsFavorite}" />

                                        <Grid.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem x:Name="CopyToClipboard" Header="Copy to clipboard" Click="Search_MenuItem_CopyToClipboard_Click">
                                                    <MenuItem.Icon>
                                                        <TextBlock Text="&#xE16F;" Style="{StaticResource IconStyle}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                                <MenuItem x:Name="MarkAsFavorite" Header="Mark as favorite" Click="Search_MenuItem_MarkAsFavorite_Click">
                                                    <MenuItem.Icon>
                                                        <TextBlock Text="&#xE24A;" Style="{StaticResource IconStyle}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                                <MenuItem x:Name="EditTags" Header="Edit tags" Click="Search_MenuItem_EditTags_Click">
                                                    <MenuItem.Icon>
                                                        <TextBlock Text="&#xE1CB;" Style="{StaticResource IconStyle}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                            </ContextMenu>
                                        </Grid.ContextMenu>
                                    </Grid>
                                </ContentControl>
                            </DataTemplate>
                        </ListView.ItemTemplate>

                        <ListView.Resources>
                            <Style TargetType="{x:Type ListView}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBox}">
                                            <Border Name="Bd"
                                                    Padding="0"
                                                    BorderThickness="{TemplateBinding Border.BorderThickness}"
                                                    BorderBrush="{TemplateBinding Border.BorderBrush}"
                                                    Background="{TemplateBinding Panel.Background}"
                                                    SnapsToDevicePixels="True">
                                                <ScrollViewer Padding="{TemplateBinding Control.Padding}"
                                                              Focusable="False"
                                                              HorizontalScrollBarVisibility="Disabled">
                                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                                </ScrollViewer>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=SearchTextBox, Path=Text.Length, Mode=OneWay}" Value="0">
                                        <Setter Property="ListView.Visibility" Value="Hidden" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="HorizontalAlignment" Value="Stretch" />
                                <Setter Property="Margin" Value="-4,0" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListViewItem">
                                            <Border
                                                BorderThickness="{TemplateBinding Border.BorderThickness}"
                                                Padding="{TemplateBinding Control.Padding}"
                                                BorderBrush="{TemplateBinding Border.BorderBrush}"
                                                Background="{TemplateBinding Panel.Background}"
                                                Name="Bd"
                                                SnapsToDevicePixels="True">
                                                <ContentPresenter
                                                    Content="{TemplateBinding ContentControl.Content}"
                                                    ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                    ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                                    HorizontalAlignment="{TemplateBinding Control.HorizontalAlignment}"
                                                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="UIElement.IsMouseOver">
                                                            <Condition.Value>True</Condition.Value>
                                                        </Condition>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Panel.Background"
                                                            TargetName="Bd"
                                                            Value="{StaticResource AlternatingBackgroundHover}">
                                                    </Setter>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Selector.IsSelectionActive">
                                                            <Condition.Value>False</Condition.Value>
                                                        </Condition>
                                                        <Condition Property="Selector.IsSelected">
                                                            <Condition.Value>True</Condition.Value>
                                                        </Condition>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Panel.Background"
                                                            TargetName="Bd"
                                                            Value="{StaticResource AlternatingBackgroundSelected}">
                                                    </Setter>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Selector.IsSelectionActive">
                                                            <Condition.Value>True</Condition.Value>
                                                        </Condition>
                                                        <Condition Property="Selector.IsSelected">
                                                            <Condition.Value>True</Condition.Value>
                                                        </Condition>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Panel.Background"
                                                            TargetName="Bd"
                                                            Value="{StaticResource AlternatingBackgroundSelected}">
                                                    </Setter>
                                                </MultiTrigger>
                                                <Trigger Property="UIElement.IsEnabled">
                                                    <Setter Property="TextElement.Foreground" TargetName="Bd">
                                                        <Setter.Value>
                                                            <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Trigger.Value>False</Trigger.Value>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                        <Setter Property="Background" Value="{StaticResource AlternatingBackground1}" />
                                    </Trigger>
                                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                        <Setter Property="Background" Value="{StaticResource AlternatingBackground2}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.Resources>
                    </ListView>
                    <TextBlock Grid.Row="1" TextAlignment="Center" FontSize="18" Foreground="{StaticResource TertiaryForeground}" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="20">
                        <TextBlock.Style>
                            <Style>
                                <Setter Property="TextBlock.Visibility" Value="Hidden" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=SearchTextBox, Path=Text.Length, Mode=OneWay}" Value="0">
                                        <Setter Property="TextBlock.Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                        Start typing to search <LineBreak />
                        ↑ / ↓ to navigate results <LineBreak />
                        Enter to insert character <LineBreak />
                        Ctrl+C to copy character
                    </TextBlock>
                </Grid>
            </TabItem>

            <TabItem x:Name="TagsTab" Style="{StaticResource TabHeaderNormalStyle}">
                <TabItem.Header>
                    <StackPanel Style="{StaticResource TabHeaderStackPanelStyle}">
                        <TextBlock Text="&#xE1CB;" Style="{StaticResource TabHeaderIconStyle}" />
                        <TextBlock Text="Tags" Grid.Row="2" Style="{StaticResource TabHeaderTextStyle}" />
                    </StackPanel>
                </TabItem.Header>

                <Grid FocusManager.FocusedElement="{Binding ElementName=TagsTextBox}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <TextBox
                        x:Name="TagsTextBox"
                        TextWrapping="Wrap"
                        VerticalAlignment="Top"
                        FontSize="16"
                        Padding="5"
                        TextChanged="TagsTextBox_TextChanged"
                        PreviewKeyDown="TagsTextBox_PreviewKeyDown"
                        BorderThickness="0,1" Grid.Row="0" />

                    <ListView
                        Name="TagsResults"
                        Grid.IsSharedSizeScope="True"
                        AlternationCount="2"
                        Grid.Row="1"
                        BorderThickness="0"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <ContentControl MouseDoubleClick="TagsResult_MouseDoubleClick">
                                    <Grid Margin="10">
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Grid Grid.Row="0" Margin="0,0,0,5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="#" Foreground="#5F5F5F" FontSize="16" Grid.Column="0" />
                                            <TextBlock Text="{Binding Name}" FontSize="16" Grid.Column="1" />
                                        </Grid>
                                        <TextBlock Text="{Binding Description}" Foreground="#5F5F5F" Grid.Row="1" />
                                    </Grid>
                                </ContentControl>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.Resources>
                            <Style TargetType="{x:Type ListView}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBox}">
                                            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="0" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True">
                                                <ScrollViewer Padding="{TemplateBinding Control.Padding}" Focusable="False" HorizontalScrollBarVisibility="Disabled">
                                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                                </ScrollViewer>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="HorizontalAlignment" Value="Stretch" />
                                <Setter Property="Margin" Value="-4,0" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListViewItem">
                                            <Border
                                                BorderThickness="{TemplateBinding Border.BorderThickness}"
                                                Padding="{TemplateBinding Control.Padding}"
                                                BorderBrush="{TemplateBinding Border.BorderBrush}"
                                                Background="{TemplateBinding Panel.Background}"
                                                Name="Bd"
                                                SnapsToDevicePixels="True">
                                                <ContentPresenter
                                                    Content="{TemplateBinding ContentControl.Content}"
                                                    ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                    ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                                    HorizontalAlignment="{TemplateBinding Control.HorizontalAlignment}"
                                                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="UIElement.IsMouseOver">
                                                            <Condition.Value>True</Condition.Value>
                                                        </Condition>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Panel.Background"
                                                            TargetName="Bd"
                                                            Value="{StaticResource AlternatingBackgroundHover}">
                                                    </Setter>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Selector.IsSelectionActive">
                                                            <Condition.Value>False</Condition.Value>
                                                        </Condition>
                                                        <Condition Property="Selector.IsSelected">
                                                            <Condition.Value>True</Condition.Value>
                                                        </Condition>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Panel.Background"
                                                            TargetName="Bd"
                                                            Value="{StaticResource AlternatingBackgroundSelected}">
                                                    </Setter>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Selector.IsSelectionActive">
                                                            <Condition.Value>True</Condition.Value>
                                                        </Condition>
                                                        <Condition Property="Selector.IsSelected">
                                                            <Condition.Value>True</Condition.Value>
                                                        </Condition>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Panel.Background"
                                                            TargetName="Bd"
                                                            Value="{StaticResource AlternatingBackgroundSelected}">
                                                    </Setter>
                                                </MultiTrigger>
                                                <Trigger Property="UIElement.IsEnabled">
                                                    <Setter Property="TextElement.Foreground" TargetName="Bd">
                                                        <Setter.Value>
                                                            <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Trigger.Value>False</Trigger.Value>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                        <Setter Property="Background" Value="{StaticResource AlternatingBackground1}" />
                                    </Trigger>
                                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                        <Setter Property="Background" Value="{StaticResource AlternatingBackground2}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.Resources>
                    </ListView>
                </Grid>
            </TabItem>

            <TabItem x:Name="FavoritesTab" Style="{StaticResource TabHeaderNormalStyle}">
                <TabItem.Header>
                    <StackPanel Style="{StaticResource TabHeaderStackPanelStyle}">
                        <TextBlock Text="&#xE24A;" Style="{StaticResource TabHeaderIconStyle}" />
                        <TextBlock Text="Favorites" Grid.Row="2" Style="{StaticResource TabHeaderTextStyle}" />
                    </StackPanel>
                </TabItem.Header>

                <Grid FocusManager.FocusedElement="{Binding ElementName=SearchTextBox}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <TextBox
                        x:Name="FavoritesTextBox"
                        TextWrapping="Wrap"
                        VerticalAlignment="Top"
                        FontSize="16"
                        Padding="5"
                        TextChanged="FavoritesTextBox_TextChanged"
                        PreviewKeyDown="FavoritesTextBox_PreviewKeyDown"
                        BorderThickness="0,1" />

                    <ListView
                        Name="FavoritesResults"
                        Grid.IsSharedSizeScope="True"
                        AlternationCount="2"
                        Grid.Row="1"
                        BorderThickness="0"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <ContentControl MouseDoubleClick="FavoritesResult_MouseDoubleClick">
                                    <Grid Name="FavoritesResult">
                                        <Grid.RowDefinitions>
                                            <RowDefinition SharedSizeGroup="FavoritesResultRowSize1" />
                                            <RowDefinition SharedSizeGroup="FavoritesResultRowSize2" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="FavoritesResultColumnSize" />
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Text="{Binding Value}" FontSize="36" HorizontalAlignment="Center" Padding="5">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HasSpecialValue}" Value="true">
                                                            <Setter Property="Foreground" Value="Blue" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                        <TextBlock Text="{Binding Codepoint}" Grid.Row="1" FontSize="12" HorizontalAlignment="Center" Padding="5" Foreground="#666666" />
                                    </Grid>
                                </ContentControl>
                            </DataTemplate>
                        </ListView.ItemTemplate>

                        <ListView.Resources>
                            <Style TargetType="{x:Type ListView}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBox}">
                                            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="0" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True">
                                                <ScrollViewer Padding="{TemplateBinding Control.Padding}" Focusable="False" HorizontalScrollBarVisibility="Disabled">
                                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                                </ScrollViewer>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="Margin" Value="-4,0" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListViewItem">
                                            <Border
                                                BorderThickness="{TemplateBinding Border.BorderThickness}"
                                                Padding="{TemplateBinding Control.Padding}"
                                                BorderBrush="{TemplateBinding Border.BorderBrush}"
                                                Background="{TemplateBinding Panel.Background}"
                                                Name="Bd"
                                                SnapsToDevicePixels="True">
                                                <ContentPresenter
                                                    Content="{TemplateBinding ContentControl.Content}"
                                                    ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                    ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                                    HorizontalAlignment="{TemplateBinding Control.HorizontalAlignment}"
                                                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="UIElement.IsMouseOver">
                                                            <Condition.Value>True</Condition.Value>
                                                        </Condition>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Panel.Background"
                                                            TargetName="Bd"
                                                            Value="{StaticResource AlternatingBackgroundHover}">
                                                    </Setter>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Selector.IsSelectionActive">
                                                            <Condition.Value>False</Condition.Value>
                                                        </Condition>
                                                        <Condition Property="Selector.IsSelected">
                                                            <Condition.Value>True</Condition.Value>
                                                        </Condition>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Panel.Background"
                                                            TargetName="Bd"
                                                            Value="{StaticResource AlternatingBackgroundSelected}">
                                                    </Setter>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Selector.IsSelectionActive">
                                                            <Condition.Value>True</Condition.Value>
                                                        </Condition>
                                                        <Condition Property="Selector.IsSelected">
                                                            <Condition.Value>True</Condition.Value>
                                                        </Condition>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Panel.Background"
                                                            TargetName="Bd"
                                                            Value="{StaticResource AlternatingBackgroundSelected}">
                                                    </Setter>
                                                </MultiTrigger>
                                                <Trigger Property="UIElement.IsEnabled">
                                                    <Setter Property="TextElement.Foreground" TargetName="Bd">
                                                        <Setter.Value>
                                                            <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Trigger.Value>False</Trigger.Value>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListView.Resources>
                    </ListView>
                </Grid>
            </TabItem>
        </TabControl>

        <Button
            x:Name="navButton"
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            Cursor="Hand"
            Click="navButton_Click"
            ContextMenuService.IsEnabled="False">
            <TextBlock Text="&#xE115;" Style="{StaticResource TabHeaderIconStyle}" Margin="15,10,15,9" />
            <Button.Resources>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="shell:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                    <Setter Property="Background" Value="White" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="0">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#e8e8e8" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Resources>
            <Button.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Settings" Click="NavButton_MenuItem_Settings_Click" />
                    <MenuItem Header="About" Click="NavButton_MenuItem_About_Click" />
                    <MenuItem Header="Exit" Click="NavButton_MenuItem_Exit_Click" />
                </ContextMenu>
            </Button.ContextMenu>
        </Button>
    </Grid>
</Window>
